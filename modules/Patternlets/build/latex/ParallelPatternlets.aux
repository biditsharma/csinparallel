\relax 
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\select@language{english}
\@writefile{toc}{\select@language{english}}
\@writefile{lof}{\select@language{english}}
\@writefile{lot}{\select@language{english}}
\newlabel{index::doc}{{}{1}{\relax }{section*.2}{}}
\@writefile{toc}{\contentsline {chapter}{\numberline {1}Parallel Programming Patterns}{2}{chapter.1}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{PatternsIntro:parallel-programming-patterns}{{1}{2}{Parallel Programming Patterns\relax }{chapter.1}{}}
\newlabel{PatternsIntro::doc}{{1}{2}{Parallel Programming Patterns\relax }{chapter.1}{}}
\newlabel{PatternsIntro:parallel-patternlets}{{1}{2}{Parallel Programming Patterns\relax }{chapter.1}{}}
\@writefile{toc}{\contentsline {section}{\numberline {1.1}An organization of parallel patterns}{2}{section.1.1}}
\newlabel{PatternsIntro:an-organization-of-parallel-patterns}{{1.1}{2}{An organization of parallel patterns\relax }{section.1.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1.1}Strategies}{2}{subsection.1.1.1}}
\newlabel{PatternsIntro:strategies}{{1.1.1}{2}{Strategies\relax }{subsection.1.1.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1.2}Concurrent Execution Mechanisms}{2}{subsection.1.1.2}}
\newlabel{PatternsIntro:concurrent-execution-mechanisms}{{1.1.2}{2}{Concurrent Execution Mechanisms\relax }{subsection.1.1.2}{}}
\@writefile{toc}{\contentsline {chapter}{\numberline {2}Message Passing Parallel Patternlets}{4}{chapter.2}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{MessagePassing/MPI_Patternlets:message-passing-parallel-patternlets}{{2}{4}{Message Passing Parallel Patternlets\relax }{chapter.2}{}}
\newlabel{MessagePassing/MPI_Patternlets::doc}{{2}{4}{Message Passing Parallel Patternlets\relax }{chapter.2}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.1}Source Code}{4}{section.2.1}}
\newlabel{MessagePassing/MPI_Patternlets:source-code}{{2.1}{4}{Source Code\relax }{section.2.1}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.2}00. Single Program, Multiple Data}{4}{section.2.2}}
\newlabel{MessagePassing/MPI_Patternlets:single-program-multiple-data}{{2.2}{4}{00. Single Program, Multiple Data\relax }{section.2.2}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.3}1. The Barrier Coordination Pattern}{5}{section.2.3}}
\newlabel{MessagePassing/MPI_Patternlets:the-barrier-coordination-pattern}{{2.3}{5}{1. The Barrier Coordination Pattern\relax }{section.2.3}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.4}2. The Master-Worker Implementation Strategy Pattern}{6}{section.2.4}}
\newlabel{MessagePassing/MPI_Patternlets:the-master-worker-implementation-strategy-pattern}{{2.4}{6}{2. The Master-Worker Implementation Strategy Pattern\relax }{section.2.4}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.5}3. Message passing 1, using Send-Receive of a single value}{6}{section.2.5}}
\newlabel{MessagePassing/MPI_Patternlets:message-passing-1-using-send-receive-of-a-single-value}{{2.5}{6}{3. Message passing 1, using Send-Receive of a single value\relax }{section.2.5}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.6}4. Message passing 2, using Send-Receive of an array of values}{7}{section.2.6}}
\newlabel{MessagePassing/MPI_Patternlets:message-passing-2-using-send-receive-of-an-array-of-values}{{2.6}{7}{4. Message passing 2, using Send-Receive of an array of values\relax }{section.2.6}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.7}5. Message passing 3, using Send-Receive with master-worker pattern}{9}{section.2.7}}
\newlabel{MessagePassing/MPI_Patternlets:message-passing-3-using-send-receive-with-master-worker-pattern}{{2.7}{9}{5. Message passing 3, using Send-Receive with master-worker pattern\relax }{section.2.7}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.8}6 (text). Data Decomposition: on \emph  {equal-sized chunks} using parallel-for}{10}{section.2.8}}
\newlabel{MessagePassing/MPI_Patternlets:text-data-decomposition-on-equal-sized-chunks-using-parallel-for}{{2.8}{10}{6 (text). Data Decomposition: on \emph {equal-sized chunks} using parallel-for\relax }{section.2.8}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.9}6 (visual). Data Decomposition: on \emph  {equal-sized chunks} using parallel-for}{11}{section.2.9}}
\newlabel{MessagePassing/MPI_Patternlets:visual-data-decomposition-on-equal-sized-chunks-using-parallel-for}{{2.9}{11}{6 (visual). Data Decomposition: on \emph {equal-sized chunks} using parallel-for\relax }{section.2.9}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.10}7 (text). Data Decomposition: on \emph  {chunks of size 1} using parallel-for}{13}{section.2.10}}
\newlabel{MessagePassing/MPI_Patternlets:text-data-decomposition-on-chunks-of-size-1-using-parallel-for}{{2.10}{13}{7 (text). Data Decomposition: on \emph {chunks of size 1} using parallel-for\relax }{section.2.10}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.11}7 (visual). Data Decomposition: on \emph  {chunks of size 1} using parallel-for}{13}{section.2.11}}
\newlabel{MessagePassing/MPI_Patternlets:visual-data-decomposition-on-chunks-of-size-1-using-parallel-for}{{2.11}{13}{7 (visual). Data Decomposition: on \emph {chunks of size 1} using parallel-for\relax }{section.2.11}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.12}8. Broadcast: a special form of message passing}{15}{section.2.12}}
\newlabel{MessagePassing/MPI_Patternlets:broadcast-a-special-form-of-message-passing}{{2.12}{15}{8. Broadcast: a special form of message passing\relax }{section.2.12}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.13}9. Collective Communication: Reduction}{16}{section.2.13}}
\newlabel{MessagePassing/MPI_Patternlets:collective-communication-reduction}{{2.13}{16}{9. Collective Communication: Reduction\relax }{section.2.13}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.14}10. Collective Communication: Reduction}{17}{section.2.14}}
\newlabel{MessagePassing/MPI_Patternlets:id1}{{2.14}{17}{10. Collective Communication: Reduction\relax }{section.2.14}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.15}11. Collective communication: Scatter for message-passing data decomposition}{18}{section.2.15}}
\newlabel{MessagePassing/MPI_Patternlets:collective-communication-scatter-for-message-passing-data-decomposition}{{2.15}{18}{11. Collective communication: Scatter for message-passing data decomposition\relax }{section.2.15}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.16}12. Collective communication: Gather for message-passing data decomposition}{19}{section.2.16}}
\newlabel{MessagePassing/MPI_Patternlets:collective-communication-gather-for-message-passing-data-decomposition}{{2.16}{19}{12. Collective communication: Gather for message-passing data decomposition\relax }{section.2.16}{}}
\@writefile{toc}{\contentsline {chapter}{\numberline {3}Shared Memory Parallel Patternlets in OpenMP}{22}{chapter.3}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{SharedMemory/OpenMP_Patternlets:shared-memory-parallel-patternlets-in-openmp}{{3}{22}{Shared Memory Parallel Patternlets in OpenMP\relax }{chapter.3}{}}
\newlabel{SharedMemory/OpenMP_Patternlets::doc}{{3}{22}{Shared Memory Parallel Patternlets in OpenMP\relax }{chapter.3}{}}
\@writefile{toc}{\contentsline {section}{\numberline {3.1}Source Code}{22}{section.3.1}}
\newlabel{SharedMemory/OpenMP_Patternlets:source-code}{{3.1}{22}{Source Code\relax }{section.3.1}{}}
\@writefile{toc}{\contentsline {section}{\numberline {3.2}Patternlets Grouped By Type}{23}{section.3.2}}
\newlabel{SharedMemory/OpenMP_Patternlets:patternlets-grouped-by-type}{{3.2}{23}{Patternlets Grouped By Type\relax }{section.3.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.1}Shared Memory Program Structure and Coordination Patterns}{23}{subsection.3.2.1}}
\newlabel{SharedMemory/ProgStructure_Barrier:shared-memory-program-structure-and-coordination-patterns}{{3.2.1}{23}{Shared Memory Program Structure and Coordination Patterns\relax }{subsection.3.2.1}{}}
\newlabel{SharedMemory/ProgStructure_Barrier::doc}{{3.2.1}{23}{Shared Memory Program Structure and Coordination Patterns\relax }{subsection.3.2.1}{}}
\@writefile{toc}{\contentsline {subsubsection}{0. Program Structure Implementation Strategy: The basic fork-join pattern}{23}{subsubsection*.3}}
\newlabel{SharedMemory/ProgStructure_Barrier:program-structure-implementation-strategy-the-basic-fork-join-pattern}{{3.2.1}{23}{0. Program Structure Implementation Strategy: The basic fork-join pattern\relax }{subsubsection*.3}{}}
\@writefile{toc}{\contentsline {subsubsection}{1. Program Structure Implementation Strategy: Fork-join with setting the number of threads}{24}{subsubsection*.4}}
\newlabel{SharedMemory/ProgStructure_Barrier:program-structure-implementation-strategy-fork-join-with-setting-the-number-of-threads}{{3.2.1}{24}{1. Program Structure Implementation Strategy: Fork-join with setting the number of threads\relax }{subsubsection*.4}{}}
\@writefile{toc}{\contentsline {subsubsection}{2. Program Structure Implementation Strategy: Single Program, multiple data}{25}{subsubsection*.5}}
\newlabel{SharedMemory/ProgStructure_Barrier:program-structure-implementation-strategy-single-program-multiple-data}{{3.2.1}{25}{2. Program Structure Implementation Strategy: Single Program, multiple data\relax }{subsubsection*.5}{}}
\@writefile{toc}{\contentsline {subsubsection}{3. Program Structure Implementation Strategy: Single Program, multiple data with user-defined number of threads}{28}{subsubsection*.6}}
\newlabel{SharedMemory/ProgStructure_Barrier:program-structure-implementation-strategy-single-program-multiple-data-with-user-defined-number-of-threads}{{3.2.1}{28}{3. Program Structure Implementation Strategy: Single Program, multiple data with user-defined number of threads\relax }{subsubsection*.6}{}}
\@writefile{toc}{\contentsline {subsubsection}{4. Coordination: Synchronization with a Barrier}{29}{subsubsection*.7}}
\newlabel{SharedMemory/ProgStructure_Barrier:coordination-synchronization-with-a-barrier}{{3.2.1}{29}{4. Coordination: Synchronization with a Barrier\relax }{subsubsection*.7}{}}
\@writefile{toc}{\contentsline {subsubsection}{5. Program Structure: The Master-Worker Implementation Strategy}{31}{subsubsection*.8}}
\newlabel{SharedMemory/ProgStructure_Barrier:program-structure-the-master-worker-implementation-strategy}{{3.2.1}{31}{5. Program Structure: The Master-Worker Implementation Strategy\relax }{subsubsection*.8}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.2}Data Decomposition Algorithm Strategies and Related Coordination Strategies}{32}{subsection.3.2.2}}
\newlabel{SharedMemory/DataDecomp_Reduction::doc}{{3.2.2}{32}{Data Decomposition Algorithm Strategies and Related Coordination Strategies\relax }{subsection.3.2.2}{}}
\newlabel{SharedMemory/DataDecomp_Reduction:data-decomposition-algorithm-strategies-and-related-coordination-strategies}{{3.2.2}{32}{Data Decomposition Algorithm Strategies and Related Coordination Strategies\relax }{subsection.3.2.2}{}}
\@writefile{toc}{\contentsline {subsubsection}{6. Shared Data Decomposition Algorithm Strategy: chunks of data per thread using a parallel for loop implementation strategy}{32}{subsubsection*.9}}
\newlabel{SharedMemory/DataDecomp_Reduction:shared-data-decomposition-algorithm-strategy-chunks-of-data-per-thread-using-a-parallel-for-loop-implementation-strategy}{{3.2.2}{32}{6. Shared Data Decomposition Algorithm Strategy: chunks of data per thread using a parallel for loop implementation strategy\relax }{subsubsection*.9}{}}
\@writefile{toc}{\contentsline {subsubsection}{7. Shared Data Decomposition Algorithm Strategy: one iteration per thread in a parallel for loop implementation strategy}{35}{subsubsection*.10}}
\newlabel{SharedMemory/DataDecomp_Reduction:shared-data-decomposition-algorithm-strategy-one-iteration-per-thread-in-a-parallel-for-loop-implementation-strategy}{{3.2.2}{35}{7. Shared Data Decomposition Algorithm Strategy: one iteration per thread in a parallel for loop implementation strategy\relax }{subsubsection*.10}{}}
\@writefile{toc}{\contentsline {subsubsection}{8. Coordination Using Collective Communication: Reduction}{36}{subsubsection*.11}}
\newlabel{SharedMemory/DataDecomp_Reduction:coordination-using-collective-communication-reduction}{{3.2.2}{36}{8. Coordination Using Collective Communication: Reduction\relax }{subsubsection*.11}{}}
\@writefile{toc}{\contentsline {paragraph}{Something to think about}{38}{paragraph*.12}}
\newlabel{SharedMemory/DataDecomp_Reduction:something-to-think-about}{{3.2.2}{38}{Something to think about\relax }{paragraph*.12}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.3}Patterns used when threads share data values}{38}{subsection.3.2.3}}
\newlabel{SharedMemory/MutualExclusion:patterns-used-when-threads-share-data-values}{{3.2.3}{38}{Patterns used when threads share data values\relax }{subsection.3.2.3}{}}
\newlabel{SharedMemory/MutualExclusion::doc}{{3.2.3}{38}{Patterns used when threads share data values\relax }{subsection.3.2.3}{}}
\@writefile{toc}{\contentsline {subsubsection}{9. Shared Data Algorithm Strategy: Parallel-for-loop pattern needs non-shared, private variables}{38}{subsubsection*.13}}
\newlabel{SharedMemory/MutualExclusion:shared-data-algorithm-strategy-parallel-for-loop-pattern-needs-non-shared-private-variables}{{3.2.3}{38}{9. Shared Data Algorithm Strategy: Parallel-for-loop pattern needs non-shared, private variables\relax }{subsubsection*.13}{}}
\@writefile{toc}{\contentsline {subsubsection}{10. Race Condition: missing the mutual exclusion coordination pattern}{39}{subsubsection*.14}}
\newlabel{SharedMemory/MutualExclusion:race-condition-missing-the-mutual-exclusion-coordination-pattern}{{3.2.3}{39}{10. Race Condition: missing the mutual exclusion coordination pattern\relax }{subsubsection*.14}{}}
\@writefile{toc}{\contentsline {subsubsection}{11. The Mutual Exclusion Coordination Pattern: two ways to ensure}{40}{subsubsection*.15}}
\newlabel{SharedMemory/MutualExclusion:the-mutual-exclusion-coordination-pattern-two-ways-to-ensure}{{3.2.3}{40}{11. The Mutual Exclusion Coordination Pattern: two ways to ensure\relax }{subsubsection*.15}{}}
\@writefile{toc}{\contentsline {subsubsection}{12. Mutual Exclusion Coordination Pattern: compare performance}{41}{subsubsection*.16}}
\newlabel{SharedMemory/MutualExclusion:mutual-exclusion-coordination-pattern-compare-performance}{{3.2.3}{41}{12. Mutual Exclusion Coordination Pattern: compare performance\relax }{subsubsection*.16}{}}
\@writefile{toc}{\contentsline {subsubsection}{13. Mutual Exclusion Coordination Pattern: language difference}{42}{subsubsection*.17}}
\newlabel{SharedMemory/MutualExclusion:mutual-exclusion-coordination-pattern-language-difference}{{3.2.3}{42}{13. Mutual Exclusion Coordination Pattern: language difference\relax }{subsubsection*.17}{}}
\@writefile{toc}{\contentsline {paragraph}{Some Explanation}{43}{paragraph*.18}}
\newlabel{SharedMemory/MutualExclusion:some-explanation}{{3.2.3}{43}{Some Explanation\relax }{paragraph*.18}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.4}Task Decomposition Algorithm Strategies}{44}{subsection.3.2.4}}
\newlabel{SharedMemory/TaskDecomp:task-decomposition-algorithm-strategies}{{3.2.4}{44}{Task Decomposition Algorithm Strategies\relax }{subsection.3.2.4}{}}
\newlabel{SharedMemory/TaskDecomp::doc}{{3.2.4}{44}{Task Decomposition Algorithm Strategies\relax }{subsection.3.2.4}{}}
\@writefile{toc}{\contentsline {subsubsection}{14. Task Decomposition Algorithm Strategy using OpenMP section directive}{44}{subsubsection*.19}}
\newlabel{SharedMemory/TaskDecomp:task-decomposition-algorithm-strategy-using-openmp-section-directive}{{3.2.4}{44}{14. Task Decomposition Algorithm Strategy using OpenMP section directive\relax }{subsubsection*.19}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.5}Categorizing Patterns}{45}{subsection.3.2.5}}
\newlabel{SharedMemory/patterns_diagram::doc}{{3.2.5}{45}{Categorizing Patterns\relax }{subsection.3.2.5}{}}
\newlabel{SharedMemory/patterns_diagram:categorizing-patterns}{{3.2.5}{45}{Categorizing Patterns\relax }{subsection.3.2.5}{}}
