\relax 
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\select@language{english}
\@writefile{toc}{\select@language{english}}
\@writefile{lof}{\select@language{english}}
\@writefile{lot}{\select@language{english}}
\newlabel{index::doc}{{}{1}{\relax }{section*.2}{}}
\@writefile{toc}{\contentsline {chapter}{\numberline {1}Source Code}{2}{chapter.1}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{index:source-code}{{1}{2}{Source Code\relax }{chapter.1}{}}
\newlabel{index:parallel-patternlets}{{1}{2}{Source Code\relax }{chapter.1}{}}
\@writefile{toc}{\contentsline {chapter}{\numberline {2}Contents:}{3}{chapter.2}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{index:contents}{{2}{3}{Contents:\relax }{chapter.2}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.1}Message Passing Parallel Patternlets}{3}{section.2.1}}
\newlabel{MessagePassing/MPI_Patternlets:message-passing-parallel-patternlets}{{2.1}{3}{Message Passing Parallel Patternlets\relax }{section.2.1}{}}
\newlabel{MessagePassing/MPI_Patternlets::doc}{{2.1}{3}{Message Passing Parallel Patternlets\relax }{section.2.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.1}Source Code}{3}{subsection.2.1.1}}
\newlabel{MessagePassing/MPI_Patternlets:source-code}{{2.1.1}{3}{Source Code\relax }{subsection.2.1.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.2}0. Hello, World}{3}{subsection.2.1.2}}
\newlabel{MessagePassing/MPI_Patternlets:hello-world}{{2.1.2}{3}{0. Hello, World\relax }{subsection.2.1.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.3}1. The Master-Worker Implementation Strategy Pattern}{4}{subsection.2.1.3}}
\newlabel{MessagePassing/MPI_Patternlets:the-master-worker-implementation-strategy-pattern}{{2.1.3}{4}{1. The Master-Worker Implementation Strategy Pattern\relax }{subsection.2.1.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.4}2. Send-Receive (basic message passing pattern)}{4}{subsection.2.1.4}}
\newlabel{MessagePassing/MPI_Patternlets:send-receive-basic-message-passing-pattern}{{2.1.4}{4}{2. Send-Receive (basic message passing pattern)\relax }{subsection.2.1.4}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.5}3. Data Decomposition: on \emph  {slices} using parallel-for}{5}{subsection.2.1.5}}
\newlabel{MessagePassing/MPI_Patternlets:data-decomposition-on-slices-using-parallel-for}{{2.1.5}{5}{3. Data Decomposition: on \emph {slices} using parallel-for\relax }{subsection.2.1.5}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.6}4. Data Decomposition: on \emph  {blocks} using parallel-for}{6}{subsection.2.1.6}}
\newlabel{MessagePassing/MPI_Patternlets:data-decomposition-on-blocks-using-parallel-for}{{2.1.6}{6}{4. Data Decomposition: on \emph {blocks} using parallel-for\relax }{subsection.2.1.6}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.7}5. Broadcast: a special form of message passing}{6}{subsection.2.1.7}}
\newlabel{MessagePassing/MPI_Patternlets:broadcast-a-special-form-of-message-passing}{{2.1.7}{6}{5. Broadcast: a special form of message passing\relax }{subsection.2.1.7}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.8}6. Collective Communication: Reduction}{7}{subsection.2.1.8}}
\newlabel{MessagePassing/MPI_Patternlets:collective-communication-reduction}{{2.1.8}{7}{6. Collective Communication: Reduction\relax }{subsection.2.1.8}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.9}7. Collective communication: Scatter for message-passing data decomposition}{8}{subsection.2.1.9}}
\newlabel{MessagePassing/MPI_Patternlets:collective-communication-scatter-for-message-passing-data-decomposition}{{2.1.9}{8}{7. Collective communication: Scatter for message-passing data decomposition\relax }{subsection.2.1.9}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.10}8. Collective communication: Gather for message-passing data decomposition}{9}{subsection.2.1.10}}
\newlabel{MessagePassing/MPI_Patternlets:collective-communication-gather-for-message-passing-data-decomposition}{{2.1.10}{9}{8. Collective communication: Gather for message-passing data decomposition\relax }{subsection.2.1.10}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.2}Shared Memory Parallel Patternlets in OpenMP}{9}{section.2.2}}
\newlabel{SharedMemory/OpenMP_Patternlets:shared-memory-parallel-patternlets-in-openmp}{{2.2}{9}{Shared Memory Parallel Patternlets in OpenMP\relax }{section.2.2}{}}
\newlabel{SharedMemory/OpenMP_Patternlets::doc}{{2.2}{9}{Shared Memory Parallel Patternlets in OpenMP\relax }{section.2.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.1}Source Code}{10}{subsection.2.2.1}}
\newlabel{SharedMemory/OpenMP_Patternlets:source-code}{{2.2.1}{10}{Source Code\relax }{subsection.2.2.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.2}0. The OMP parallel pragma}{10}{subsection.2.2.2}}
\newlabel{SharedMemory/OpenMP_Patternlets:the-omp-parallel-pragma}{{2.2.2}{10}{0. The OMP parallel pragma\relax }{subsection.2.2.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.3}1. Hello, World: default number of OpenMP threads}{10}{subsection.2.2.3}}
\newlabel{SharedMemory/OpenMP_Patternlets:hello-world-default-number-of-openmp-threads}{{2.2.3}{10}{1. Hello, World: default number of OpenMP threads\relax }{subsection.2.2.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.4}2. Hello, World}{11}{subsection.2.2.4}}
\newlabel{SharedMemory/OpenMP_Patternlets:hello-world}{{2.2.4}{11}{2. Hello, World\relax }{subsection.2.2.4}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.5}3. Master-Worker Implementation Strategy}{12}{subsection.2.2.5}}
\newlabel{SharedMemory/OpenMP_Patternlets:master-worker-implementation-strategy}{{2.2.5}{12}{3. Master-Worker Implementation Strategy\relax }{subsection.2.2.5}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.6}4. Shared Data Decomposition Pattern: blocking of threads in a parallel for loop}{12}{subsection.2.2.6}}
\newlabel{SharedMemory/OpenMP_Patternlets:shared-data-decomposition-pattern-blocking-of-threads-in-a-parallel-for-loop}{{2.2.6}{12}{4. Shared Data Decomposition Pattern: blocking of threads in a parallel for loop\relax }{subsection.2.2.6}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.7}5. Shared Data Decomposition Pattern: striping of threads in a parallel for loop}{13}{subsection.2.2.7}}
\newlabel{SharedMemory/OpenMP_Patternlets:shared-data-decomposition-pattern-striping-of-threads-in-a-parallel-for-loop}{{2.2.7}{13}{5. Shared Data Decomposition Pattern: striping of threads in a parallel for loop\relax }{subsection.2.2.7}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.8}6. Collective Communication: Reduction}{13}{subsection.2.2.8}}
\newlabel{SharedMemory/OpenMP_Patternlets:collective-communication-reduction}{{2.2.8}{13}{6. Collective Communication: Reduction\relax }{subsection.2.2.8}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.9}7. Shared Data Pattern: Parallel-for-loop needs non-shared, private variables}{15}{subsection.2.2.9}}
\newlabel{SharedMemory/OpenMP_Patternlets:shared-data-pattern-parallel-for-loop-needs-non-shared-private-variables}{{2.2.9}{15}{7. Shared Data Pattern: Parallel-for-loop needs non-shared, private variables\relax }{subsection.2.2.9}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.10}8. Race Condition: missing the mutual exclusion patterm}{16}{subsection.2.2.10}}
\newlabel{SharedMemory/OpenMP_Patternlets:race-condition-missing-the-mutual-exclusion-patterm}{{2.2.10}{16}{8. Race Condition: missing the mutual exclusion patterm\relax }{subsection.2.2.10}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.11}9. Mutual Exclusion: two ways to ensure}{17}{subsection.2.2.11}}
\newlabel{SharedMemory/OpenMP_Patternlets:mutual-exclusion-two-ways-to-ensure}{{2.2.11}{17}{9. Mutual Exclusion: two ways to ensure\relax }{subsection.2.2.11}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.12}10. Mutual Exclusion Pattern: compare performance}{18}{subsection.2.2.12}}
\newlabel{SharedMemory/OpenMP_Patternlets:mutual-exclusion-pattern-compare-performance}{{2.2.12}{18}{10. Mutual Exclusion Pattern: compare performance\relax }{subsection.2.2.12}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.13}11. Task Decomposition Pattern using OpenMP section directive}{19}{subsection.2.2.13}}
\newlabel{SharedMemory/OpenMP_Patternlets:task-decomposition-pattern-using-openmp-section-directive}{{2.2.13}{19}{11. Task Decomposition Pattern using OpenMP section directive\relax }{subsection.2.2.13}{}}
