\BOOKMARK [0][-]{chapter.1}{Parallel Programming Patterns}{}% 1
\BOOKMARK [1][-]{section.1.1}{An organization of parallel patterns}{chapter.1}% 2
\BOOKMARK [0][-]{chapter.2}{Message Passing Parallel Patternlets}{}% 3
\BOOKMARK [1][-]{section.2.1}{Source Code}{chapter.2}% 4
\BOOKMARK [1][-]{section.2.2}{0. Single Program, Multiple Data}{chapter.2}% 5
\BOOKMARK [1][-]{section.2.3}{1. The Master-Worker Implementation Strategy Pattern}{chapter.2}% 6
\BOOKMARK [1][-]{section.2.4}{2. Message passing 1, using Send-Receive of a single value}{chapter.2}% 7
\BOOKMARK [1][-]{section.2.5}{3. Message passing 2, using Send-Receive of an array of values}{chapter.2}% 8
\BOOKMARK [1][-]{section.2.6}{4. A. Data Decomposition: on slices using parallel-for \(textual version\)}{chapter.2}% 9
\BOOKMARK [1][-]{section.2.7}{4. B. Data Decomposition: on slices using parallel-for \(visual version\)}{chapter.2}% 10
\BOOKMARK [1][-]{section.2.8}{5. A. Data Decomposition: on blocks using parallel-for \(textual version\)}{chapter.2}% 11
\BOOKMARK [1][-]{section.2.9}{5. B. Data Decomposition: on blocks using parallel-for \(visual version\)}{chapter.2}% 12
\BOOKMARK [1][-]{section.2.10}{6. Broadcast: a special form of message passing}{chapter.2}% 13
\BOOKMARK [1][-]{section.2.11}{7. Collective Communication: Reduction}{chapter.2}% 14
\BOOKMARK [1][-]{section.2.12}{8. Collective communication: Scatter for message-passing data decomposition}{chapter.2}% 15
\BOOKMARK [1][-]{section.2.13}{9. Collective communication: Gather for message-passing data decomposition}{chapter.2}% 16
\BOOKMARK [1][-]{section.2.14}{10. Collective Communication: Barrier}{chapter.2}% 17
\BOOKMARK [0][-]{chapter.3}{Shared Memory Parallel Patternlets in OpenMP}{}% 18
\BOOKMARK [1][-]{section.3.1}{Source Code}{chapter.3}% 19
\BOOKMARK [1][-]{section.3.2}{Patternlets Grouped By Type}{chapter.3}% 20
